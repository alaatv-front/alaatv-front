@use "sass:map";
@import "src/css/Theme/colors";
@import "src/css/Theme/radius";
@import "src/css/Theme/shadow";
@import "src/css/Theme/spacing";
@import "src/css/Theme/Typography/typography";

$button-height: (
  "xs": $space-6,
  "sm": $space-7,
  "md": $space-8,
  "lg": $space-9,
  "xl": $space-10,
);

@mixin btn-content-typo($size) {
  @if index(("xs", "sm", "md"), $size) {
    @include button2;
  } @else if index(("lg", "xl"), $size) {
    @include button1;
  }
}

@mixin btn-icon-typo($size) {
  @if index(("xs", "sm", "md"), $size) {
    font-size: 16px;
  } @else if index(("lg", "xl"), $size) {
    font-size: 20px;
  }
}

@mixin btn-handle-radius($size) {
  $target-radius: $radius-1;

  @if index(("xs", "sm"), $size) {
    $target-radius: $radius-2;
  } @else if index(("sm", "md", "lg", "xl"), $size) {
    $target-radius: $radius-3;
  }

  border-radius: $target-radius;
}

@mixin btn-handle-round-width($size) {
  $round-width: map.get($button-height, $size);
  min-width: $round-width !important;
}

@mixin btn-handle-square-width($size) {
  $square-width: map.get($button-height, $size);
  min-width: $square-width !important;
}

@mixin btn_handle_padding($size) {
  $target-padding-x: $space-1;
  $target-padding-y: $spacing-none;

  @if $size == "xs" {
    $target-padding-x: $space-1;
  } @else if $size == "sm" {
    $target-padding-x: $space-1;
  } @else if $size == "md" {
    $target-padding-x: $space-2;
  } @else if $size == "lg" {
    $target-padding-x: $space-3;
    $target-padding-y: $space-4;
  } @else if $size == "xl" {
    $target-padding-x: $space-4;
  }

  padding: $target-padding-y $target-padding-x;
}

@mixin btn-handle-height($size) {

  height: map.get($button-height, $size) !important;
}

@mixin btn-handle-sizes($size) {
  @include btn_handle_height($size);
  @include btn-handle-radius($size);
  @include btn_handle_padding($size);

  &.q-btn--square {
    @include btn-handle-square-width($size);
  }

  &.q-btn--round {
    @include btn-handle-round-width($size);

    border-radius: $radius-round !important;
  }

  .q-btn__content {
    @include btn-content-typo($size);

    .q-icon {
      @include btn-icon-typo($size);
    }
  }
}

body {
  .q-btn {
    min-height: auto;
    min-width: auto;
    color: $grey-1;

    /* fill */
    .q-btn__content {
      .q-icon {
        &.on-left {
          margin-right: $space-1;
        }

        &.on-right {
          margin-left: $space-1;
        }
      }
    }

    &::before {
      box-shadow: none;
    }

    /* handle sizes */

    /* xs */
    &.size-xs {
      @include btn-handle-sizes("xs");
    }

    /* sm */
    &.size-sm {
      @include btn-handle-sizes("sm");
    }

    /* md */
    &.size-md {
      @include btn-handle-sizes("md");
    }

    @include btn-handle-sizes("md");

    /* lg */
    &.size-lg {
      @include btn-handle-sizes("lg");
    }

    /* xl */
    &.size-xl {
      @include btn-handle-sizes("xl");
    }

    /* handle states */

    /* disabled */
    &.disabled,
    &[disabled] {
      opacity: 0.24 !important;
    }

    /* hover */
    &.q-hoverable:hover {
      & > .q-focus-helper {
        opacity: 1;
        background: $lighten-5;

        &::before {
          display: none;
        }

        &::after {
          display: none;
        }
      }

      &::before {
        display: none;
      }
    }

    /* active */
    &.q-btn--active.q-btn--actionable {
      &::before {
        box-shadow: unset;
        color: unset;
        background: inherit;
        opacity: 0.2;
        position: absolute;
        inset: #{-$space-1} #{-$space-1} #{-$space-1} #{-$space-1};
        width: calc(100% + 8px);
        height: calc(100% + 8px);
      }
    }

    /* custom style for fill */
    &.bg-primary {
      color: $grey-9 !important;
    }

    &.bg-grey {
      color: $grey-9 !important;
      background: $grey-2 !important;

      &.q-hoverable:hover {
        & > .q-focus-helper {
          background: $darken-1;
        }
      }
    }

    /* flat */
    &.q-btn--flat {
      color: $grey-9;

      &.text-grey {
        color: $grey-9 !important;
      }

      &::before {
        border: none;
      }

      &.q-hoverable:hover {
        & > .q-focus-helper {
          background: currentcolor;
          opacity: 0.05;
        }
      }
    }

    /* outline */
    &.q-btn--outline {
      &::before {
        filter: opacity(0.3);
        border-width: 1.5px;
      }

      &.text-grey {
        color: $grey-9 !important;
      }

      &.q-hoverable:hover:not(.disabled) {
        & > .q-focus-helper {
          background: currentcolor;
          opacity: 0.2;

          &::before {
            display: block;
          }

          &::after {
            display: block;
          }
        }

        &::before {
          display: block;
        }
      }
    }
  }
}
